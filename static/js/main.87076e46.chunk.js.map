{"version":3,"sources":["layouts/App/components/Header/styles.ts","layouts/App/components/Header/Header.tsx","views/styles.ts","config/Config.ts","lib/objectToUrlParams.ts","ApiClient.ts","hooks/useApiClient.ts","views/CountriesContainer.tsx","views/CountryInfo.tsx","layouts/App/AppLayout.tsx","layouts/App/routes.tsx","App.tsx","index.tsx"],"names":["useStyles","makeStyles","theme","appBar","backgroundColor","transform","zIndex","toolBar","breakpoints","up","padding","spacing","title","flexGrow","color","palette","text","primary","button","textTransform","Header","toggleDarkTheme","classes","AppBar","position","className","Toolbar","Typography","variant","Button","startIcon","onClick","body","mainBody","cardMedia","aspectRatio","borderBottom","mainGridContainer","bodyGridContainer","optionsGrid","errorGrid","textAlign","infoMedia","borderButton","margin","grid","marginTop","countryTitle","fontWeight","gridContainer","paddingTop","detailElement","Config","API_BASE_URL","process","REACT_APP_API_BASE_URL","objectToUrlParams","object","URLSearchParams","queryString","Object","entries","reduce","prev","key","val","append","String","toString","length","singleton","api","this","axios","create","path","queryStringData","setHeaders","url","get","response","getResponse","status","Error","statusText","data","method","headers","includes","Accept","defaults","useApiClient","React","setData","loading","setLoading","error","setError","loadData","a","ApiClient","refetch","Regions","CountriesContainer","useState","searchText","setSearchText","regionValue","setRegionValue","displayData","setDisplayData","variables","useMemo","useDebounce","searchTextValue","searchData","searchLoading","regionData","regionLoading","useEffect","Array","isArray","regions","AFRICA","AMERICAS","ASIA","EUROPE","OEANIA","Fragment","Grid","container","justifyContent","item","md","xs","TextField","fullWidth","id","placeholder","value","onChange","e","target","InputProps","startAdornment","IconButton","SearchOutlined","Autocomplete","options","getOptionLabel","l","renderInput","params","name","LinearProgress","gutterBottom","map","country","index","lg","Card","CardActionArea","component","Link","to","CardMedia","image","flag","CardContent","population","toLocaleString","region","capital","CountryInfo","countryName","useParams","borderCodes","borders","undefined","borderCountries","borderLoading","borderNames","m","nativeName","subregion","topLevelDomain","currencies","languages","b","main","height","AppLayout","routes","style","marginLeft","Component","render","routeProps","componentProps","App","props","state","isDark","customTheme","createTheme","type","CssBaseline","setState","ReactDOM","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.87076e46.chunk.js","sourcesContent":["import { makeStyles } from \"@material-ui/core\";\n\nexport const useStyles = makeStyles((theme) => ({\n  appBar: {\n    backgroundColor: \"transparent\",\n    transform: \"unset\",\n    zIndex: 1,\n  },\n\n  toolBar: {\n    [theme.breakpoints.up(\"lg\")]: {\n      padding: theme.spacing(0, 8.8),\n    },\n  },\n  title: {\n    flexGrow: 1,\n    color: theme.palette.text.primary,\n  },\n\n  button: {\n    textTransform: \"none\",\n    padding: 0,\n  },\n}));\n","import { AppBar, Toolbar, Typography, Button } from \"@material-ui/core\";\nimport * as React from \"react\";\nimport { useStyles } from \"./styles\";\nimport NightsStayOutlinedIcon from \"@material-ui/icons/NightsStayOutlined\";\n\ninterface Props {\n  toggleDarkTheme: () => void;\n}\n\nexport const Header: React.FC<Props> = ({ toggleDarkTheme }) => {\n  const classes = useStyles();\n\n  return (\n    <React.Fragment>\n      <AppBar position=\"static\" className={classes.appBar}>\n        <Toolbar className={classes.toolBar}>\n          <Typography variant=\"h6\" className={classes.title}>\n            Where in the world?\n          </Typography>\n          <Button\n            className={classes.button}\n            startIcon={<NightsStayOutlinedIcon />}\n            onClick={toggleDarkTheme}\n          >\n            Dark Mode\n          </Button>\n        </Toolbar>\n      </AppBar>\n    </React.Fragment>\n  );\n};\n","import { makeStyles } from \"@material-ui/core\";\n\nexport const useStyles = makeStyles((theme) => ({\n  body: {\n    padding: theme.spacing(4),\n    [theme.breakpoints.up(\"lg\")]: {\n      padding: theme.spacing(8),\n    },\n  },\n\n  mainBody: {\n    padding: theme.spacing(0, 5),\n  },\n\n  cardMedia: {\n    aspectRatio: \"1.5\",\n    borderBottom: \"1px solid theme.palette.text.disabled\",\n  },\n\n  mainGridContainer: {\n    padding: theme.spacing(3.7),\n  },\n\n  bodyGridContainer: {\n    padding: theme.spacing(2),\n    [theme.breakpoints.up(\"lg\")]: {\n      padding: theme.spacing(4, 9, 2, 9),\n    },\n  },\n\n  optionsGrid: {\n    [theme.breakpoints.up(\"xs\")]: {\n      padding: theme.spacing(2, 0),\n    },\n  },\n\n  errorGrid: {\n    padding: theme.spacing(3.7),\n    textAlign: \"center\",\n  },\n\n  infoMedia: {\n    aspectRatio: \"1.5\",\n  },\n\n  borderButton: {\n    margin: theme.spacing(2, 1.2, 0, 0),\n    padding: theme.spacing(0, 2.5),\n  },\n\n  grid: {\n    marginTop: theme.spacing(5),\n  },\n\n  countryTitle: {\n    fontWeight: \"bold\",\n    marginTop: theme.spacing(5),\n  },\n\n  gridContainer: {\n    paddingTop: theme.spacing(2.5),\n  },\n\n  detailElement: {\n    padding: theme.spacing(0.6, 0),\n  },\n}));\n","const env = process.env;\n\nexport const Config = {\n  API_BASE_URL: env.REACT_APP_API_BASE_URL || \"https://restcountries.com/v2\",\n};\n","export function objectToUrlParams(object?: { [key: string]: any }) {\n  if (!object) {\n    return new URLSearchParams();\n  }\n\n  const queryString = Object.entries(object).reduce<URLSearchParams>(\n    (prev, [key, val]) => {\n      if (typeof val !== 'undefined' && val !== null) {\n        prev.append(key, String(val));\n      }\n\n      return prev;\n    },\n    new URLSearchParams(),\n  );\n\n  return queryString.toString().length > 0 ? `?${queryString}` : '';\n}\n","import axios, { AxiosInstance, AxiosResponse } from \"axios\";\nimport { Config } from \"./config\";\nimport { objectToUrlParams } from \"./lib\";\n\nclass APIClient {\n  private api: AxiosInstance;\n\n  constructor() {\n    this.api = axios.create();\n  }\n\n  public async get<T>(\n    path: string,\n    queryStringData?: { [key: string]: string | number }\n  ) {\n    await this.setHeaders(\"GET\");\n\n    const url = `${path}${objectToUrlParams(queryStringData)}`;\n    const response = await this.api.get<T>(`${Config.API_BASE_URL}${url}`);\n    return this.getResponse(response);\n  }\n\n  private getResponse<T>(response: AxiosResponse<T>) {\n    if (response.status !== 200) {\n      throw new Error(response.statusText);\n    }\n    return response.data;\n  }\n\n  private async setHeaders(method: \"GET\") {\n    const headers: any = {};\n\n    if ([\"GET\"].includes(method)) {\n      headers.Accept = \"application/json\";\n    }\n\n    this.api.defaults.headers = headers;\n  }\n}\n\nconst singleton = new APIClient();\n\nexport { singleton as ApiClient };\n","import * as React from \"react\";\nimport { ApiClient } from \"../ApiClient\";\n\nexport function useApiClient<T>(\n  url: string,\n  queryStringData?: { [key: string]: any }\n): [{ data?: T; loading: boolean; error: string; refetch: () => void }] {\n  const [data, setData] = React.useState<T>();\n  const [loading, setLoading] = React.useState(true);\n  const [error, setError] = React.useState(\"\");\n\n  const loadData = React.useCallback(\n    async function loadData() {\n      try {\n        setLoading(true);\n        const response = await ApiClient.get<T>(url, queryStringData);\n        if (!response) {\n          return;\n        }\n        setData(response);\n      } catch (error) {\n        setError(error);\n      } finally {\n        setLoading(false);\n      }\n    },\n    [url, queryStringData]\n  );\n\n  React.useEffect(() => {\n    loadData();\n  }, [loadData]);\n\n  return [{ data, loading, error, refetch: loadData }];\n}\n","import {\n  Grid,\n  TextField,\n  IconButton,\n  Card,\n  CardActionArea,\n  LinearProgress,\n  CardMedia,\n  CardContent,\n  Typography,\n} from \"@material-ui/core\";\nimport { SearchOutlined } from \"@material-ui/icons\";\nimport React from \"react\";\nimport { useStyles } from \"./styles\";\nimport { Autocomplete } from \"@material-ui/lab\";\nimport { useApiClient } from \"../hooks\";\nimport { Country } from \"../models\";\nimport { useDebounce } from \"use-debounce/lib\";\nimport { Link } from \"react-router-dom\";\n\nenum Regions {\n  AFRICA = \"Africa\",\n  AMERICAS = \"Americas\",\n  ASIA = \"Asia\",\n  EUROPE = \"Europe\",\n  OEANIA = \"Oceania\",\n}\nexport const CountriesContainer: React.FC = () => {\n  const classes = useStyles();\n  const [{ data, loading }] = useApiClient<Country[]>(`/all`);\n  const [searchText, setSearchText] = React.useState<string>(\"\");\n  const [regionValue, setRegionValue] = React.useState<Regions | null>();\n  const [displayData, setDisplayData] = React.useState<Country[]>();\n\n  const variables = React.useMemo(\n    () => ({\n      searchText: searchText,\n    }),\n    [searchText]\n  );\n\n  const [searchTextValue] = useDebounce(variables.searchText, 1000);\n\n  const [{ data: searchData, loading: searchLoading }] = useApiClient<\n    Country[]\n  >(`/name/${searchTextValue}`);\n\n  const [{ data: regionData, loading: regionLoading }] = useApiClient<\n    Country[]\n  >(`/region/${regionValue}`);\n\n  React.useEffect(() => {\n    if (searchTextValue && searchTextValue?.length > 0) {\n      !Array.isArray(searchData)\n        ? setDisplayData([])\n        : setDisplayData(searchData);\n      return;\n    }\n    if (regionValue) {\n      !Array.isArray(regionData)\n        ? setDisplayData([])\n        : setDisplayData(regionData);\n      return;\n    }\n    if (data) {\n      setDisplayData(data);\n    }\n  }, [data, searchData, searchTextValue, regionValue, regionData]);\n\n  const regions: Regions[] = [\n    Regions.AFRICA,\n    Regions.AMERICAS,\n    Regions.ASIA,\n    Regions.EUROPE,\n    Regions.OEANIA,\n  ];\n  return (\n    <React.Fragment>\n      <Grid\n        container\n        justifyContent=\"space-between\"\n        className={classes.bodyGridContainer}\n      >\n        <Grid item md={4} xs={12} className={classes.optionsGrid}>\n          <TextField\n            fullWidth\n            id=\"standard-bare\"\n            variant=\"outlined\"\n            placeholder=\"Search for a country...\"\n            value={searchText}\n            onChange={(e) => {\n              setRegionValue(null);\n              setSearchText(e.target.value);\n            }}\n            InputProps={{\n              startAdornment: (\n                <IconButton>\n                  <SearchOutlined />\n                </IconButton>\n              ),\n            }}\n          />\n        </Grid>\n\n        <Grid item md={2} xs={6} className={classes.optionsGrid}>\n          <Autocomplete\n            value={regionValue ?? null}\n            options={regions}\n            getOptionLabel={(l) => l}\n            onChange={(e, val) => {\n              setSearchText(\"\");\n              setRegionValue(val);\n            }}\n            renderInput={(params) => (\n              <TextField\n                {...params}\n                name=\"clubId\"\n                variant=\"outlined\"\n                placeholder=\"Filter by Region\"\n              />\n            )}\n          />\n        </Grid>\n      </Grid>\n      <div className={classes.mainBody}>\n        {(loading || searchLoading || regionLoading) && <LinearProgress />}\n        <Grid container>\n          {displayData &&\n            displayData.length === 0 &&\n            !(loading || searchLoading || regionLoading) && (\n              <Grid item xs={12} className={classes.errorGrid}>\n                <Typography gutterBottom variant=\"h4\" color=\"error\">\n                  No country found!\n                </Typography>\n              </Grid>\n            )}\n\n          {displayData?.map((country, index) => {\n            return (\n              <Grid\n                item\n                lg={3}\n                xs={12}\n                key={index.toString()}\n                className={classes.mainGridContainer}\n              >\n                <Card>\n                  <CardActionArea\n                    component={Link}\n                    to={`/country/${country.name}`}\n                  >\n                    <CardMedia\n                      className={classes.cardMedia}\n                      image={country.flag}\n                      title={country.name}\n                    />\n                    <CardContent>\n                      <Typography gutterBottom variant=\"h5\">\n                        {country.name}\n                      </Typography>\n                      <Typography variant=\"body2\">\n                        <strong>Population: </strong>\n                        {country.population.toLocaleString()}\n                      </Typography>\n                      <Typography variant=\"body2\">\n                        <strong>Region: </strong>\n                        {country.region}\n                      </Typography>\n                      <Typography variant=\"body2\">\n                        <strong>Capital: </strong>\n                        {country.capital}\n                      </Typography>\n                    </CardContent>\n                  </CardActionArea>\n                </Card>\n              </Grid>\n            );\n          })}\n        </Grid>\n      </div>\n    </React.Fragment>\n  );\n};\n","import {\n  Grid,\n  Card,\n  CardMedia,\n  Typography,\n  Button,\n  LinearProgress,\n} from \"@material-ui/core\";\nimport React from \"react\";\nimport { useStyles } from \"./styles\";\nimport { Country } from \"../models\";\nimport { useParams } from \"react-router\";\nimport { useApiClient } from \"../hooks\";\nimport KeyboardBackspaceOutlinedIcon from \"@material-ui/icons/KeyboardBackspaceOutlined\";\nimport { Link } from \"react-router-dom\";\n\ninterface Params {\n  countryName: string;\n}\nexport const CountryInfo: React.FC = () => {\n  const classes = useStyles();\n  const { countryName } = useParams<Params>();\n  const [{ data, loading }] = useApiClient<Country[]>(`/name/${countryName}`);\n  const borderCodes = Array.isArray(data)\n    ? data[0].borders?.toString()\n    : undefined;\n  const [{ data: borderCountries, loading: borderLoading }] = useApiClient<\n    Country[]\n  >(`/alpha/?codes=${borderCodes}`);\n  const borderNames = Array.isArray(borderCountries)\n    ? borderCountries.map((m) => m.name)\n    : [];\n\n  return (\n    <React.Fragment>\n      <div className={classes.body}>\n        <Button\n          variant=\"outlined\"\n          startIcon={<KeyboardBackspaceOutlinedIcon />}\n          component={Link}\n          to=\"/\"\n        >\n          Back\n        </Button>\n        {(loading || borderLoading) && <LinearProgress />}\n        {!Array.isArray(data) && !(loading || borderLoading) && (\n          <Typography\n            variant=\"h4\"\n            className={classes.countryTitle}\n            color=\"error\"\n          >\n            No country found!\n          </Typography>\n        )}\n\n        {Array.isArray(data) && data.length > 0 && (\n          <Grid container justifyContent=\"space-between\">\n            <Grid item lg={5} xs={12} className={classes.grid}>\n              <Card>\n                <CardMedia\n                  className={classes.infoMedia}\n                  image={data[0].flag}\n                  title={data[0].name}\n                />\n              </Card>\n            </Grid>\n            <Grid item lg={6} xs={12} className={classes.grid}>\n              <Typography variant=\"h2\" className={classes.countryTitle}>\n                {data[0].name}\n              </Typography>\n\n              <Grid container className={classes.gridContainer}>\n                <Grid item lg={6} xs={12}>\n                  <Typography variant=\"body1\" className={classes.detailElement}>\n                    <strong>Native Name:</strong> {data[0].nativeName}\n                  </Typography>\n                  <Typography variant=\"body1\" className={classes.detailElement}>\n                    <strong>Population: </strong>\n                    {data[0].population.toLocaleString()}\n                  </Typography>\n                  <Typography variant=\"body1\" className={classes.detailElement}>\n                    <strong>Region: </strong>\n                    {data[0].region}\n                  </Typography>\n                  <Typography variant=\"body1\" className={classes.detailElement}>\n                    <strong>Sub Region: </strong>\n                    {data[0].subregion}\n                  </Typography>\n                  <Typography variant=\"body1\" className={classes.detailElement}>\n                    <strong>Capital: </strong>\n                    {data[0].capital}\n                  </Typography>\n                </Grid>\n\n                <Grid item lg={6} xs={12}>\n                  <Typography variant=\"body1\" className={classes.detailElement}>\n                    <strong>Top Level Domain: </strong>\n                    {data[0].topLevelDomain}\n                  </Typography>\n                  <Typography variant=\"body1\" className={classes.detailElement}>\n                    <strong>Currencies: </strong>\n                    {data[0].currencies.map((m, index) =>\n                      index !== data[0].currencies.length - 1\n                        ? m.name + \", \"\n                        : m.name\n                    )}\n                  </Typography>\n                  <Typography variant=\"body1\" className={classes.detailElement}>\n                    <strong>Languages: </strong>\n                    {data[0].languages.map((m, index) =>\n                      index !== data[0].languages.length - 1\n                        ? m.name + \", \"\n                        : m.name\n                    )}\n                  </Typography>\n                </Grid>\n              </Grid>\n              <Grid container className={classes.gridContainer}>\n                <Grid item lg={3} xs={12} className={classes.gridContainer}>\n                  <Typography variant=\"body1\">\n                    <strong>Border Countries: </strong>\n                  </Typography>\n                </Grid>\n                <Grid item lg={9} xs={12}>\n                  {borderNames?.map((b, index) => {\n                    return (\n                      <Button\n                        key={index.toString()}\n                        variant=\"outlined\"\n                        className={classes.borderButton}\n                        component={Link}\n                        to={`/country/${b}`}\n                      >\n                        {b}\n                      </Button>\n                    );\n                  })}\n                </Grid>\n              </Grid>\n            </Grid>\n          </Grid>\n        )}\n      </div>\n    </React.Fragment>\n  );\n};\n","import { makeStyles } from \"@material-ui/core\";\nimport * as React from \"react\";\nimport { Redirect, Route, Switch } from \"react-router-dom\";\nimport { Header } from \"./components\";\nimport { getRoutes } from \"./routes\";\n\nconst useStyles = makeStyles((theme) => ({\n  main: {\n    height: \"100%\",\n  },\n}));\n\ninterface Props {\n  toggleDarkTheme: () => void;\n}\n\nexport const AppLayout: React.FC<Props> = ({ toggleDarkTheme }) => {\n  const classes = useStyles();\n  const routes = getRoutes();\n  return (\n    <React.Fragment>\n      <Header toggleDarkTheme={toggleDarkTheme} />\n\n      <main\n        className={classes.main}\n        style={{\n          marginLeft: 0,\n        }}\n      >\n        {routes && (\n          <Switch>\n            {routes.map(\n              ({ component: Component, render, ...routeProps }, index) => (\n                <Route\n                  {...routeProps}\n                  key={index.toString()}\n                  render={(componentProps) => (\n                    <React.Fragment>\n                      {Component ? (\n                        <Component {...componentProps} />\n                      ) : render ? (\n                        render(componentProps)\n                      ) : null}\n                    </React.Fragment>\n                  )}\n                />\n              )\n            )}\n            <Route\n              path=\"/\"\n              render={() => {\n                return <Redirect to=\"/home\" />;\n              }}\n            ></Route>\n          </Switch>\n        )}\n      </main>\n    </React.Fragment>\n  );\n};\n","import { RouteProps } from \"react-router-dom\";\nimport { CountriesContainer, CountryInfo } from \"../../views\";\n\nexport function getRoutes() {\n  const routes: RouteProps[] = [\n    {\n      path: \"/home\",\n      component: CountriesContainer,\n    },\n    {\n      path: \"/country/:countryName\",\n      component: CountryInfo,\n    },\n  ];\n  return routes;\n}\n","import { AppLayout } from \"./layouts\";\nimport * as React from \"react\";\nimport { BrowserRouter } from \"react-router-dom\";\nimport { CssBaseline } from \"@material-ui/core\";\nimport { createTheme } from \"@material-ui/core/styles\";\nimport { MuiThemeProvider } from \"@material-ui/core/styles\";\n\ninterface Props {}\n\ninterface CustomState {\n  isDark: boolean;\n}\n\nexport default class App extends React.Component<Props, CustomState> {\n  constructor(props: Props) {\n    super(props);\n    this.state = {\n      isDark: false,\n    };\n  }\n\n  public render() {\n    const customTheme = createTheme({\n      palette: {\n        type: this.state.isDark ? \"dark\" : \"light\",\n      },\n    });\n\n    const toggleDarkTheme = () => {\n      this.setState({ isDark: !this.state.isDark });\n    };\n\n    return (\n      <MuiThemeProvider theme={customTheme}>\n        <CssBaseline />\n        <BrowserRouter>\n          <AppLayout toggleDarkTheme={toggleDarkTheme} />\n        </BrowserRouter>\n      </MuiThemeProvider>\n    );\n  }\n}\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n"],"sourceRoot":""}